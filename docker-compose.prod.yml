version: '3.8'

services:
  # ML Framework API 服务
  ml-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: ml-framework:prod-cuda13
    container_name: ml-framework-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # 模型目录 (只读)
      - ./models:/app/models:ro
      # 配置文件 (只读)
      - ./configs/production.yaml:/app/configs/production.yaml:ro
      # 日志目录
      - ./logs:/app/logs
      # 数据目录 (只读)
      - ./data:/app/data:ro
    environment:
      # Python环境配置
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      
      # ML Framework配置
      - ML_FRAMEWORK_CONFIG_PATH=/app/configs/production.yaml
      - ML_FRAMEWORK_LOGGING_LEVEL=INFO
      - ML_FRAMEWORK_MODELS_DIR=/app/models
      - ML_FRAMEWORK_DATA_DIR=/app/data
      
      # GPU配置
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      
      # 性能优化
      - OMP_NUM_THREADS=4
      - MKL_NUM_THREADS=4
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    depends_on:
      - redis
    
    networks:
      - ml-network

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: ml-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ml-network

  # Nginx 负载均衡和反向代理
  nginx:
    image: nginx:alpine
    container_name: ml-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - ml-api
    networks:
      - ml-network
      - external

  # Prometheus 监控
  prometheus:
    image: prom/prometheus:latest
    container_name: ml-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ml-network

  # Grafana 可视化
  grafana:
    image: grafana/grafana:latest
    container_name: ml-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - prometheus
    networks:
      - ml-network

  # 日志收集 (可选)
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: ml-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/app/logs:ro
    depends_on:
      - ml-api
    networks:
      - ml-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ml-network:
    driver: bridge
    internal: true
  external:
    driver: bridge